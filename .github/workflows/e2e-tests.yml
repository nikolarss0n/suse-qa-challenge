name: Rancher Test Workflow

on:
  # Workflow dispatch allows manual triggering from any branch
  workflow_dispatch:
  
  # For automated runs on specific branches
  push:
    branches:
      - main          # For maintaining the workflow file
      - 'test/**'     # For any test branches
      - 'feature/**'  # For feature branches that need testing
  pull_request:
    branches:
      - main         # For PRs targeting main

jobs:
  test:
    runs-on: ubuntu-latest
    
    env:
      RANCHER_PORT: 8443
      RANCHER_URL: https://localhost:8443

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start Rancher container
        run: |
          docker run -d \
            --name rancher \
            --privileged \
            -p 8443:443 \
            -e CATTLE_BOOTSTRAP_PASSWORD=${{ secrets.RANCHER_ADMIN_PASSWORD }} \
            -e CATTLE_SYSTEM_DEFAULT_REGISTRY="" \
            -e CATTLE_TOKEN_KEY="" \
            rancher/rancher:latest

      - name: Wait for Rancher to be ready
        timeout-minutes: 10
        run: |
          echo "Waiting for Rancher to initialize..."
          until curl -sk ${RANCHER_URL}/ping > /dev/null 2>&1; do
            echo "Waiting for Rancher API..."
            docker ps -a --filter name=rancher
            docker logs rancher --tail 20
            sleep 30
          done
          echo "Rancher is ready!"

      - name: Initialize Rancher and get auth token
        run: |
          # Additional wait to ensure API stability
          sleep 30
          
          echo "Attempting to get authentication token..."
          TOKEN=$(curl -sk "${RANCHER_URL}/v3-public/localProviders/local?action=login" \
            -H 'content-type: application/json' \
            --data-raw "{\"username\":\"admin\",\"password\":\"${{ secrets.RANCHER_ADMIN_PASSWORD }}\"}" \
            | jq -r .token)
          
          if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
            echo "Failed to get authentication token"
            echo "Rancher container logs:"
            docker logs rancher
            exit 1
          fi
          
          echo "Successfully obtained authentication token"
          echo "CYPRESS_AUTH_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Install Cypress dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          config: baseUrl=${RANCHER_URL}
        env:
          CYPRESS_VERIFY_SSL: false
          CYPRESS_AUTH_TOKEN: ${{ env.CYPRESS_AUTH_TOKEN }}

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-artifacts
          path: |
            cypress/videos
            cypress/screenshots

      - name: Cleanup
        if: always()
        run: docker rm -f rancher || true