name: Rancher Test Workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    env:
      RANCHER_PORT: 8443

    services:
      rancher:
        image: rancher/rancher:latest
        ports:
          - 8443:443
        env:
          CATTLE_BOOTSTRAP_PASSWORD: ${{ secrets.RANCHER_ADMIN_PASSWORD }}
          CATTLE_SYSTEM_DEFAULT_REGISTRY: ""
          CATTLE_TOKEN_KEY: ""
        options: >-
          --privileged
          --restart=unless-stopped

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate SSL certificate
        run: |
          mkdir -p ./certs
          openssl req -x509 -newkey rsa:4096 -sha256 -days 3650 \
            -nodes -keyout ./certs/server.key -out ./certs/server.crt \
            -subj "/CN=localhost" -addext "subjectAltName=DNS:localhost"

      - name: Debug container status
        run: |
          docker ps -a
          docker logs $(docker ps -q --filter "ancestor=rancher/rancher:latest")

      - name: Wait for Rancher to be ready
        run: |
          echo "Waiting for Rancher container to initialize..."
          for i in {1..24}; do
            if ! docker ps -q --filter "ancestor=rancher/rancher:latest" > /dev/null 2>&1; then
              echo "Error: Rancher container is not running"
              docker ps -a
              exit 1
            fi
            
            STATUS=$(docker inspect -f "{{.State.Status}}" $(docker ps -q --filter "ancestor=rancher/rancher:latest"))
            echo "Container status: $STATUS"
            
            if [ "$STATUS" = "running" ]; then
              # Try multiple times to get UI status as it might not be ready immediately
              for j in {1..3}; do
                UI_STATUS=$(curl -k -s -o /dev/null -w "%{http_code}" https://localhost:8443/ping)
                echo "UI status code: $UI_STATUS"
                
                if [ "$UI_STATUS" -eq 200 ]; then
                  echo "Rancher is ready!"
                  exit 0
                fi
                sleep 5
              done
            fi
            
            echo "Still waiting... ($((i * 5)) seconds elapsed)"
            sleep 5
          done
          
          echo "Error: Rancher failed to initialize within 120 seconds."
          docker logs $(docker ps -q --filter "ancestor=rancher/rancher:latest")
          exit 1

      - name: Initialize Rancher
        run: |
          # Wait a bit more after UI is up to ensure API is ready
          sleep 10
          
          FIRST_LOGIN_TOKEN=$(curl -k -s "https://localhost:${RANCHER_PORT}/v3-public/localProviders/local?action=login" \
            -H 'content-type: application/json' \
            --data-raw "{\"username\":\"admin\",\"password\":\"${{ secrets.RANCHER_ADMIN_PASSWORD }}\"}" | jq -r .token)
          
          if [ -z "$FIRST_LOGIN_TOKEN" ]; then
            echo "Error: Failed to get login token"
            curl -k -v "https://localhost:${RANCHER_PORT}/v3-public/localProviders/local?action=login" \
              -H 'content-type: application/json' \
              --data-raw "{\"username\":\"admin\",\"password\":\"${{ secrets.RANCHER_ADMIN_PASSWORD }}\"}"
            exit 1
          fi
          
          echo "CYPRESS_AUTH_TOKEN=$FIRST_LOGIN_TOKEN" >> $GITHUB_ENV

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          config: baseUrl=https://localhost:${{ env.RANCHER_PORT }}
        env:
          CYPRESS_VERIFY_SSL: false

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-artifacts
          path: |
            cypress/videos
            cypress/screenshots