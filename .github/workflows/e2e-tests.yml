name: Rancher Test Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'test/**'
      - 'feature/**'
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    env:
      ADMIN_USERNAME: ${{ secrets.RANCHER_ADMIN_USERNAME }}
      ADMIN_PASSWORD: ${{ secrets.RANCHER_ADMIN_PASSWORD }}
      RANCHER_PORT: 8443
      RANCHER_URL: https://localhost:8443

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'ui-tests/package-lock.json'

      - name: Start Rancher container
        run: |
          docker run -d \
            --name rancher \
            --privileged \
            -p 8443:443 \
            -e CATTLE_BOOTSTRAP_PASSWORD=${{ secrets.RANCHER_ADMIN_PASSWORD }} \
            -e CATTLE_SYSTEM_DEFAULT_REGISTRY="" \
            -e CATTLE_TOKEN_KEY="" \
            rancher/rancher:latest

      - name: Wait for Rancher to be ready
        timeout-minutes: 10
        run: |
          echo "Waiting for Rancher to initialize..."
          until curl -sk ${RANCHER_URL}/ping > /dev/null 2>&1; do
            echo "Waiting for Rancher API..."
            docker ps -a --filter name=rancher
            docker logs rancher --tail 20
            sleep 30
          done
          echo "Rancher is ready!"

      - name: Initialize Rancher and get auth token
        run: |
          sleep 30
          
          echo "Attempting to get authentication token..."
          TOKEN=$(curl -sk "${RANCHER_URL}/v3-public/localProviders/local?action=login" \
            -H 'content-type: application/json' \
            --data-raw "{\"username\":\"admin\",\"password\":\"${{ secrets.RANCHER_ADMIN_PASSWORD }}\"}" \
            | jq -r .token)
          
          if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
            echo "Failed to get authentication token"
            echo "Rancher container logs:"
            docker logs rancher
            exit 1
          fi
          
          echo "Successfully obtained authentication token"
          echo "CYPRESS_AUTH_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Install dependencies
        working-directory: ui-tests
        run: |
          npm ci

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: ui-tests
          browser: chrome
        env:
          CYPRESS_BASE_URL: https://localhost:8443
          CYPRESS_RANCHER_URL: https://localhost:8443
          CYPRESS_AUTH_TOKEN: ${{ env.CYPRESS_AUTH_TOKEN }}
          CYPRESS_VERIFY_SSL: false
          NODE_TLS_REJECT_UNAUTHORIZED: '0'
          # Moving the chrome web security config to an env variable
          CYPRESS_CHROME_WEB_SECURITY: false

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-artifacts
          path: |
            ui-tests/cypress/videos
            ui-tests/cypress/screenshots

      - name: Cleanup
        if: always()
        run: docker rm -f rancher || true